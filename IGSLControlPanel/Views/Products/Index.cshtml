@model IEnumerable<IGSLControlPanel.Models.FolderTreeEntry>

@{
    ViewData["Title"] = "Продукты";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <link href="lib/bootstrap/dist/css/bootstrap.min.css.map" />
    <script src="lib/jquery/dist/jquery.min.js"></script>
    <script src="lib/bootstrap/dist/js/bootstrap.min.js"></script>
    <style type="text/css">
        .tree, .tree ul {
            margin: 0;
            padding: 0;
            list-style: none;
        }

        .tree ul {
            margin-left: 1em;
            position: relative;
        }

        .tree ul ul {
            margin-left: .5em;
        }

        .tree ul:before {
            content: "";
            color: gray;
            display: block;
            width: 0;
            position: absolute;
            top: 0;
            bottom: 0;
            left: 0;
            border-left: 1px dotted;
        }

        .tree li {
            margin: 0;
            padding: 0 1em;
            line-height: 2em;
            color: black;
            font-weight: 300;
            position: relative;
        }

        .tree ul li:before {
            content: "";
            display: block;
            color: gray;
            width: 10px;
            height: 0;
            border-top: 1px dotted;
            margin-top: -1px;
            position: absolute;
            top: 1em;
            left: 0;
        }

        .tree ul li:last-child:before {
            background: #fff;
            height: auto;
            top: 1em;
            bottom: 0;
        }

        .indicator {
            margin-right: 5px;
        }

        .tree li a {
            text-decoration: none;
            color: #369;
        }

        .tree li button, .tree li button:active, .tree li button:focus {
            text-decoration: none;
            color: #369;
            border: none;
            background: transparent;
            margin: 0px 0px 0px 0px;
            padding: 0px 0px 0px 0px;
            outline: 0;
        }
    </style>
</head>
<body>
<p>
    <a asp-action="Create">Create New</a>
</p>
<div>
    <div id="details" style="float: right; background: red; height: 100%; width: 70%">
        
    </div>
    <div style="width: 30%; border: 1px gray groove; min-height: 600px; ">
        <ul id="tree1">
            @foreach (var item in Model)
            {
                <li>
                    @if (item.ChildFolders.Any() || item.Products.Any())
                    {
                        <img src="images/Icons/folder.png" width="18" height="18" alt="Image"/>
                    }
                    else
                    {
                        <img src="images/Icons/emptyfolder.png" width="18" height="18" alt="Image" />  
                    } 

                    @Html.DisplayTextFor(n => item.Name)
                    <ul>
                        @foreach (var child in item.ChildFolders)
                        {
                            <li>
                                @if (child.ChildFolders.Any() || child.Products.Any())
                                {
                                    <img src="images/Icons/folder.png" width="18" height="18" alt="Image"/>
                                }
                                else
                                {
                                    <img src="images/Icons/emptyfolder.png" width="18" height="18" alt="Image" />  
                                }
                                @Html.DisplayTextFor(n => child.Name)
                                @Html.Partial("folderPartial", child)
                            </li>
                        }
                        @foreach (var p in item.Products)
                        {
                            <li>
                                <a asp-controller="Products" asp-action="Edit" asp-route-id="@p.Id" >
                                    <img src="images/Icons/product.png" width="18" height="18" alt="Image"/>
                                    @Html.DisplayTextFor(c => p.Name)
                                </a>
                            </li>
                        }
                    </ul>
                </li>
            }
        </ul>
    </div>
</div>
</body>
</html>

<script type="text/javascript">
    $.fn.extend({
        treed: function (o) {

            var openedClass = 'glyphicon glyphicon-folder-open';
            var closedClass = 'glyphicon glyphicon-folder-close';

            if (typeof o != 'undefined') {
                if (typeof o.openedClass != 'undefined') {
                    openedClass = o.openedClass;
                }
                if (typeof o.closedClass != 'undefined') {
                    closedClass = o.closedClass;
                }
            };

            //initialize each of the top levels
            var tree = $(this);
            tree.addClass("tree");
            tree.find('li').has("ul").each(function () {
                var branch = $(this); //li with children ul
                branch.addClass('branch');
                branch.on('click',
                    function (e) {
                        if (this == e.target) {
                            var icon = $(this).children('i:first');
                            icon.toggleClass(openedClass + " " + closedClass);
                            $(this).children().children().toggle();
                        }
                    });
                branch.children().children().toggle();
            });
            //fire event from the dynamically added icon
            tree.find('.branch .indicator').each(function () {
                $(this).on('click', function () {
                    $(this).closest('li').click();
                });
            });
            //fire event to open branch if the li contains an anchor instead of text
            tree.find('.branch>a').each(function () {
                $(this).on('click', function (e) {
                    $(this).closest('li').click();
                    e.preventDefault();
                });
            });
            //fire event to open branch if the li contains a button instead of text
            tree.find('.branch>button').each(function () {
                $(this).on('click', function (e) {
                    $(this).closest('li').click();
                    e.preventDefault();
                });
            });
        }
    });

    //Initialization of treeviews

    $('#tree1').treed();

    $('#tree1 .branch').each(function () {

        var icon = $(this).children('i:first');
        icon.toggleClass('glyphicon-minus-sign glyphicon-plus-sign');
        $(this).children().children().toggle();

    });


</script>

