@model DBModels.Models.ProductParameter
@{
    ViewData["Title"] = "Редактирование параметра продукта";
    var returnToGroupEdit = (bool)ViewData["ReturnToGroupEdit"];
}

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="~/css/site.css" />
</head>
<body onload="OnLoad()">

    <h4>Параметр продукта</h4>
    <form asp-action="Edit" asp-route-returnToGroupEdit="@returnToGroupEdit" class="create_update_form">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="Id" />
        <div class="form-group">
            <label asp-for="Name" class="control-label"></label>
            <input id="name" asp-for="Name" class="form-control" style="width: 500px" onchange="SaveTempData()" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="ValidFrom" class="control-label" style="width: 150px"></label>
            <input asp-for="ValidFrom" class="form-control" style="width: 160px" type="date" id="validFromDt" onchange="SaveTempData()">
            <span asp-validation-for="ValidFrom" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="ValidTo" class="control-label" style="width: 150px"></label>
            <input asp-for="ValidTo" class="form-control" style="width: 160px" type="date" id="validToDt" onchange="SaveTempData()" />
            <span asp-validation-for="ValidTo" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="DataType" class="control-label" style="width: 220px"></label>
            <select id="dataType" asp-for="DataType" asp-items="Html.GetEnumSelectList<DataTypes>()" onchange="SaveTempData()" class="form-control" style="width: 150px"></select>
        </div>
        <div class="form-group">
            <label asp-for="IsRequiredForCalc" class="control-label" style="width: 220px"></label>
            <input id="calcRequired" asp-for="IsRequiredForCalc" style="vertical-align: top" onchange="SaveTempData()" />
        </div>
        <div class="form-group">
            <label asp-for="IsRequiredForSave" class="control-label" style="width: 220px"></label>
            <input id="saveRequired" asp-for="IsRequiredForSave" style="vertical-align: top" onchange="SaveTempData()" />
        </div>
        <div class="form-group">
            <label asp-for="IsConstant" class="control-label" style="width: 220px"></label>
            <input id="isConstant" asp-for="IsConstant" style="vertical-align: top" disabled="disabled" />
        </div>

        <div class="form-group" id="constantValuePartial">
            @await Html.PartialAsync("_ConstantParamValues", Model)
        </div>
        <div class="form-group">
            <label asp-for="Order" class="control-label order_label"></label>
            <input id="orderfld" asp-for="Order" min="1" class="form-control" type="number" style="width: 60px; text-align: right" onchange="SaveTempData()" />
        </div>
        <div class="form-group">
            <label asp-for="GroupId" class="control-label" style="width: 220px"></label>
            <select asp-for="GroupId" disabled="@ViewData["IsSelectGroupDisabled"]" id="groupIdfld" asp-items="@ViewData["ParamGroups"] as SelectList" onchange="SaveTempData()" class="form-control" style="width: 150px"></select>
            @Html.HiddenFor(x => x.GroupId)
        </div>
        @if (Model.DataType == (int) DataTypes.Bool)
        {
            <div class="form-group">
                <label asp-for="BoolValue" class="control-label" style="width: 220px"></label>
                <input id="boolValue" asp-for="BoolValue" style="vertical-align: top" onchange="SaveTempData()" />
            </div>
        }

        @if (!Model.IsConstant && Model.DataType != (int)DataTypes.Bool)
        {
            <div class="form-group" id="limitsDiv">
                <label>
                    Лимиты значений
                    @if (Model.Limit != null)
                    {
                        <a style="font-size: 0">
                            <img src="~/images/Icons/add_gray.png" class="small-button-img" style="margin: 2px; margin-left: 28px" alt="" />
                        </a>
                        <a asp-controller="ValueLimits" asp-action="Edit" asp-route-id="@Model.Limit.Id" style="font-size: 0">
                            <img src="~/images/Icons/edit_param.png" class="small-button-img" style="margin: 2px" alt="" />
                        </a>
                        <a asp-controller="ValueLimits" asp-action="Delete"  asp-route-id="@Model.Limit.Id" style="font-size: 0">
                            <img src="~/images/Icons/del_param.png" class="small-button-img" style="margin: 2px" alt="" />
                        </a>
                    }
                    else
                    {
                        <a id="add-limit" asp-controller="ValueLimits" asp-action="Create" style="font-size: 0">
                            <img src="~/images/Icons/add_param.png" class="small-button-img" style="margin: 2px; margin-left: 28px" alt="" />
                        </a>
                        <a style="font-size: 0">
                            <img src="~/images/Icons/edit_param_gray.png" style="margin: 2px; width: 25px; height: 25px" alt="" />
                        </a>
                        <a style="font-size: 0">
                            <img src="~/images/Icons/del_param_gray.png" style="margin: 2px; width: 25px; height: 25px" alt="" />
                        </a>
                    }
                </label>
                @if (Model.Limit == null)
                {
                    <div class="border_box" style="width: 500px">
                        <label>Нет ограничений по значению</label>
                    </div>
                }
                else
                {
                    <div class="border_box" style="width: 700px">
                        <div>
                            <label asp-for="Limit.Name" class="control-label" style="width: 180px"></label>
                            <label>@Model.Limit.Name</label>
                        </div>
                        <div>
                            <label asp-for="DataType" class="control-label" style="width: 180px"></label>
                            <select asp-for="DataType" disabled="disabled" asp-items="Html.GetEnumSelectList<DataTypes>()" class="form-control" style="width: 150px"></select>
                        </div>
                        <div>
                            @if (Model.Limit.ParameterDataType == (int)DataTypes.Date)
                            {
                                <div>
                                    <label asp-for="Limit.DateValueFrom" class="control-label" style="width: 180px"></label>
                                    <label>@Model.Limit.DateValueFrom</label>
                                </div>
                                <div>
                                    <label asp-for="Limit.DateValueTo" class="control-label" style="width: 180px"></label>
                                    <label>@Model.Limit.DateValueTo</label>
                                </div>
                            }
                            else if (Model.Limit.ParameterDataType == (int)DataTypes.Number)
                            {
                                <div>
                                    <label asp-for="Limit.IntValueFrom" class="control-label" style="width: 180px"></label>
                                    <label>@Model.Limit.IntValueFrom</label>
                                </div>
                                <div>
                                    <label asp-for="Limit.IntValueTo" class="control-label" style="width: 180px"></label>
                                    <label>@Model.Limit.IntValueTo</label>
                                </div>
                            }
                            else if (Model.Limit.ParameterDataType == (int)DataTypes.String)
                            {
                                <div>
                                    <label asp-for="Limit.StringValue" class="control-label" style="width: 180px"></label>
                                    <label>@Model.Limit.StringValue</label>
                                </div>
                            }
                            else if (Model.Limit.ParameterDataType == (int)DataTypes.List)
                            {
                                <label>Количество элементов в списке: @Model.Limit.LimitListItems.Count(x => !x.IsDeleted)</label>
                                <label>Для просмотра\редактирования элементов используйте режим редактирования лимита</label>
                            }
                        </div>
                    </div>
                }
            </div>
        }
        <div class="form-group">
            <input type="submit" value="Сохранить" name="save" class="btn btn-default" style="float: left" />
            <input type="submit" value="Сохранить и выйти" name="saveAndExit" class="btn btn-default save_and_exit_btn"/>
            <a asp-action="GoBack" asp-route-parameterId="@Model.Id" asp-route-returnToGroupEdit="@returnToGroupEdit">
                <input class="btn btn-default" style="width: 200px" value="Выйти без сохранения" />
            </a>
        </div>
    </form>

</body>
</html>

<script>
    function OnLoad() {
        if ($("#isConstant").prop("checked") === true) {
            $("#name").attr("disabled", "disabled");
            $("#validFromDt").attr("disabled", "disabled");
            $("#validToDt").attr("disabled", "disabled");
            $("#dataType").attr("disabled", "disabled");
            $("#calcRequired").attr("disabled", "disabled");
            $("#saveRequired").attr("disabled", "disabled");
            $("#orderfld").attr("disabled", "disabled");
            $("#valueStr").attr("disabled", "disabled");
            $("#valueInt").attr("disabled", "disabled");
            $("#valueDate").attr("disabled", "disabled");
            $("#boolValue").attr("disabled", "disabled");
        }
    };

    function SaveTempData() {
        $.ajax({
            url: "/ProductParameters/SaveTempData",
            type: "post",
            data: {
                dataType: $("#dataType").val(),
                name: $("#name").val(),
                dateFrom: $("#validFromDt").val(),
                dateTo: $("#validToDt").val(),
                requiredForSave: $("#saveRequired").prop("checked"),
                requiredForCalc: $("#calcRequired").prop("checked"),
                groupId: $("#groupIdfld").val(),
                order: $("#orderfld").val(),
                isConstant: $("#isConstant").prop("checked"),
                valueStr: $("#valueStr").val(),
                valueInt: $("#valueInt").val(),
                valueDate: $("#valueDate").val(),
                boolValue: $("#boolValue").prop("checked")
            },
            success: function () { }
        });
    }
</script>