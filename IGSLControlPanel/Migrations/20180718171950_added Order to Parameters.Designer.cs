// <auto-generated />
using System;
using IGSLControlPanel.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IGSLControlPanel.Migrations
{
    [DbContext(typeof(IGSLContext))]
    [Migration("20180718171950_added Order to Parameters")]
    partial class addedOrdertoParameters
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IGSLControlPanel.Models.FolderTreeEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<Guid?>("ParentFolderId");

                    b.HasKey("Id");

                    b.ToTable("FolderTreeEntries");
                });

            modelBuilder.Entity("IGSLControlPanel.Models.ManyToManyLinks.ProductLinkToProductParameter", b =>
                {
                    b.Property<Guid>("ProductId");

                    b.Property<Guid>("ProductParameterId");

                    b.HasKey("ProductId", "ProductParameterId");

                    b.HasIndex("ProductParameterId");

                    b.ToTable("ProductLinkToProductParameter");
                });

            modelBuilder.Entity("IGSLControlPanel.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("FolderId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<DateTime?>("ValidFrom");

                    b.Property<DateTime?>("ValidTo");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("IGSLControlPanel.Models.ProductParameter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DataType");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsRequiredForCalc");

                    b.Property<bool>("IsRequiredForSave");

                    b.Property<string>("Name");

                    b.Property<int>("Order");

                    b.HasKey("Id");

                    b.ToTable("ProductParameters");
                });

            modelBuilder.Entity("IGSLControlPanel.Models.Tariff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("FolderId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Tariffs");
                });

            modelBuilder.Entity("IGSLControlPanel.Models.ManyToManyLinks.ProductLinkToProductParameter", b =>
                {
                    b.HasOne("IGSLControlPanel.Models.Product", "Product")
                        .WithMany("LinkToProductParameters")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IGSLControlPanel.Models.ProductParameter", "Parameter")
                        .WithMany("LinkToProduct")
                        .HasForeignKey("ProductParameterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
